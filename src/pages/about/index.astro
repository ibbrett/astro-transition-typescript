---
import Layout from '../../layouts/About.astro';
---

<Layout
	title="About Brett Morriss"
	description="Senior Full Stack Engineer"
>
	<p>
		My name is Brett Morriss. 
		I've been using every version of ECMAScript since the first version came out in 1997. 
		In October 1994, I started building my first web pages with Netscape Navigator. 
		I was soon using a combination of HTML, CSS and JavaScript, as well as VBScript and JScript using Microsoft's Internet Explorer. 
		As a key member of WRQ's <i>Professional Services</i> team I was tasked with building my first professional UI, a front-end to the Library of Congress's IBM mainframe.
		This application showcased EnterView (WRQ's first Java-based emulator), which we launched for display at trade shows and sales presentations.
	</p>

	<p>
		In the years to follow I continued to expand my experience and knowledge of JavaScript. 
		I've started, and worked for, companies using JavaScript for the last three decades. 
		I've led teams that provided best-in-class web design solutions utilizing the three core technolgies: HTML (DHTML, XHTML, HTML5), CSS (CSS3, Sass, Less, Tailwind, Styled Components) and JavaScript (ECMAScript, TypeScript).
		I've used all kinds of tools and libraries like Bootstrap and JQuery but prefer to keep things lean using vanilla JS and CSS.
	</p>	

	<p>
		Ten years ago I began using Node, having fun importing and exporting server-side JavaScript, building web servers, API servers, 
		screen scrapers, and asynchronous test tools made possible through advances in ECMAScript. The transition from ES5 and ES6 was a game-changer. 
		It was initially strange getting used to no longer using the <i>var</i> keyword in favor of <i>let</i> and <i>const</i>. 
		However, the power that came with promises, importing and exporting and transitioning to an updated syntax using 
		arrow functions and new collections/methods opened up a world of new, incredible possibilities.
	</p>

	<p>
		ECMAScript continues to add extremely beneficial updates like destructring patterns, async/await, the ability to create and use classes, 
		the nullish coalescing operator, and improvements to objects and arrays. 
		Yes, I know ES6, but I'm really an ES14+ engineer who also loves the type safety strictness of TypeScript. JavaScript has been so much fun since day one and I can't wait to see future enhancements.  
	</p>

	<p>
		- Cheers!
	</p>
</Layout>
