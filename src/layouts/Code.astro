---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import { getCollection } from 'astro:content';
const page = 'code';
const baseUrl = await import.meta.env.BASE_URL;
const posts = (await getCollection(page)).sort(
	(a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf()
);
type Props = CollectionEntry<{page: string}>['data'];
const { title, description, pubDate } = Astro.props;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
	</head>

	<body class={`${page} layout`}>
		<Header />
		<main>
			<article>
				<div class="hero-container">
					{title && <div class="hero">
						<div class="hero-header">{title.split(' ')[0]}</div>
						<div class="hero-title">{title.split(' ')[1]}&nbsp;{title.split(' ')[2]}</div>
						<div class="hero-type"><a href={`${baseUrl}/blog/${title.split(' ')[0].toLowerCase()}/`}>New Features</a> | Code</div>
						<div class="date">
							<FormattedDate date={pubDate} />
						</div>
						</div>}
				</div>
				<div class="prose">
					<div class="title">
						{posts.map((post) => (<nobr><a href={`${baseUrl}/${page}/${post.slug}/`}>[ {post.slug} ]</a></nobr><span>&nbsp;&nbsp;</span>))}
						<hr />
					</div>
					<div class="label">Code:</div>
					<slot />
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>
