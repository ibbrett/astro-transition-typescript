---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import { getCollection } from 'astro:content';

const baseUrl = await import.meta.env.BASE_URL;

const posts = (await getCollection('blog')).sort(
	(a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf()
);
type Props = CollectionEntry<'blog'>['data'];
const { title, description, pubDate, updatedDate } = Astro.props;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
		<style>
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
				background-color: #A5ACAF;
			}
			.hero-container {
				width: 100%;
				text-align: center;
			}
			.hero {
				background-color: #69BE28;
				padding: 8px 96px;
				border-radius: 8px;
				display: inline-block;
				color: #002244;
				border: 2px solid white;
			}
			.hero-header {
				font-size: 64px;
				line-height: 64px;
			}
			.hero-title {
				font-size: 24px;
			}
			.hero-date {
				font-size: 18px;
			}
			.prose {
				width: 720px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: rgb(var(--gray-dark));
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
			}
			.date {
				margin-bottom: 0.5em;
				color: white;
			}
			.last-updated-on {
				font-style: italic;
			}
			a {
				text-decoration: none;
			}
		</style>
	</head>

	<body>
		<Header />
		<main>
			<article>
				<div class="hero-container">
					{title && <div class="hero">
						<div class="hero-header">{title.split(' ')[0]}</div>
						<div class="hero-title">{title.split(' ')[1]}&nbsp;{title.split(' ')[2]}</div>
						<div class="date">
							<FormattedDate date={pubDate} />
							{
								updatedDate && (
									<div class="last-updated-on">
										Last updated on <FormattedDate date={updatedDate} />
									</div>
								)
							}
						</div>
						</div>}
				</div>
				<div class="prose">
					<div class="title">
						{/*<h1>{title.split(' ')[1]}&nbsp;{title.split(' ')[2]}</h1>*/}
						{posts.map((post) => (<a href={`${baseUrl}/blog/${post.slug}/`}>[{post.slug}]</a><span>&nbsp;&nbsp;</span>))}
						<hr />
					</div>
					<slot />
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>
